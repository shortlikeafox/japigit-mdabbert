matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit
$ git init
Initialized empty Git repository in C:/Users/matth/OneDrive/github/japigit/.git/

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ script git_activities
bash: script: command not found

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git script git_activities
git: 'script' is not a git command. See 'git --help'.

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ config --global user.name "Matt Dabbert"
bash: config: command not found

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git config --global user.name "Matt Dabbert"

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git config --global user.email mdabbert@asu.edu

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git add .

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git commit -m "1st commit"
[master (root-commit) 5f1ee5c] 1st commit
 2 files changed, 127 insertions(+)
 create mode 100644 japi.out
 create mode 100644 japi.py

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git commit -am "Added closing comment to japi.py"
[master d9f7340] Added closing comment to japi.py
 1 file changed, 3 insertions(+), 1 deletion(-)

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status
On branch master
nothing to commit, working tree clean

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status -s

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ echo "hello there" > hello.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello.txt

nothing added to commit but untracked files present (use "git add" to track)

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status -s
?? hello.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git add .
warning: LF will be replaced by CRLF in hello.txt.
The file will have its original line endings in your working directory

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   hello.txt


matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ echo "We are testing git status" >> hello.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   hello.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   hello.txt


matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git diff
warning: LF will be replaced by CRLF in hello.txt.
The file will have its original line endings in your working directory
diff --git a/hello.txt b/hello.txt
index c7c7da3..0fffb77 100644
--- a/hello.txt
+++ b/hello.txt
@@ -1 +1,2 @@
 hello there
+We are testing git status

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git commit -m "commiting change to hello.txt"
[master bbfedf5] commiting change to hello.txt
 1 file changed, 1 insertion(+)
 create mode 100644 hello.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   hello.txt

no changes added to commit (use "git add" and/or "git commit -a")

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git add .
warning: LF will be replaced by CRLF in hello.txt.
The file will have its original line endings in your working directory

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status -s
M  hello.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git log -oneline
fatal: unrecognized argument: -oneline

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git log --oneline
bbfedf5 (HEAD -> master) commiting change to hello.txt
d9f7340 Added closing comment to japi.py
5f1ee5c 1st commit

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git branch
* master

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ echo "master version" >> hello.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git commit -am "master version"
warning: LF will be replaced by CRLF in hello.txt.
The file will have its original line endings in your working directory
[master d11ee81] master version
 1 file changed, 2 insertions(+)

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git branch feature

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git branch
  feature
* master

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git checkout feature
Switched to branch 'feature'

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (feature)
$ git branch
* feature
  master

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (feature)
$ echo "new file" > hello_feature

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (feature)
$ echo "feature version" >> hello.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (feature)
$ git add .
warning: LF will be replaced by CRLF in hello.txt.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in hello_feature.
The file will have its original line endings in your working directory

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (feature)
$ git commit -m "feature version"
[feature 48d21e3] feature version
 2 files changed, 2 insertions(+)
 create mode 100644 hello_feature

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (feature)
$ git checkout master
Switched to branch 'master'

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git branch
  feature
* master

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ echo "Initial content" > merge.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git add .
warning: LF will be replaced by CRLF in merge.txt.
The file will have its original line endings in your working directory

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git commit -m "adding new file on master"
[master c03dad3] adding new file on master
 1 file changed, 1 insertion(+)
 create mode 100644 merge.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git branch newbranch

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ echo "Update on master" > merge.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git add .
warning: LF will be replaced by CRLF in merge.txt.
The file will have its original line endings in your working directory

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git commit -m "update on master"
[master e51eab0] update on master
 1 file changed, 1 insertion(+), 1 deletion(-)

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git checkout newbranch
Switched to branch 'newbranch'

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (newbranch)
$ echo "Update on newbranch" > merge.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (newbranch)
$ git commit -am "update on newbranch"
warning: LF will be replaced by CRLF in merge.txt.
The file will have its original line endings in your working directory
[newbranch 97cd15e] update on newbranch
 1 file changed, 1 insertion(+), 1 deletion(-)

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (newbranch)
$ git checkout amster
error: pathspec 'amster' did not match any file(s) known to git

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (newbranch)
$ git checkout master
Switched to branch 'master'

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git merge newbranch
Auto-merging merge.txt
CONFLICT (content): Merge conflict in merge.txt
Automatic merge failed; fix conflicts and then commit the result.

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master|MERGING)
$ git status
On branch master
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both modified:   merge.txt

no changes added to commit (use "git add" and/or "git commit -a")

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master|MERGING)
$ cat merge.txt
<<<<<<< HEAD
Update on master
=======
Update on newbranch
>>>>>>> newbranch

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master|MERGING)
$ echo "merged version" > merge.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master|MERGING)
$ git add .
warning: LF will be replaced by CRLF in merge.txt.
The file will have its original line endings in your working directory

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master|MERGING)
$ git commit -m "Fixed conflicts"
[master be09e85] Fixed conflicts

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status
On branch master
nothing to commit, working tree clean

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git branch -d newbranch
Deleted branch newbranch (was 97cd15e).

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ echo "file to delete" > to_delete.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git add .
warning: LF will be replaced by CRLF in to_delete.txt.
The file will have its original line endings in your working directory

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git commit -m "yet another lab file"
[master e3c9bdd] yet another lab file
 1 file changed, 1 insertion(+)
 create mode 100644 to_delete.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git rm to_delete.txt
rm 'to_delete.txt'

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    to_delete.txt


matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ ls
hello.txt  japi.out  japi.py  merge.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git reset --hard HEAD
HEAD is now at e3c9bdd yet another lab file

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status
On branch master
nothing to commit, working tree clean

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ ls
hello.txt  japi.out  japi.py  merge.txt  to_delete.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git rm to_delete.txt
rm 'to_delete.txt'

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git status -sb
## master
D  to_delete.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
$ git commit -m "file deletion"
[master 92b4e68] file deletion
 1 file changed, 1 deletion(-)
 delete mode 100644 to_delete.txt

matth@DESKTOP-IU7KU17 MINGW64 ~/OneDrive/github/japigit (master)
